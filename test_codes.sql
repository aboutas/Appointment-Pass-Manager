
CREATE TABLE DEGREE_VALUES(NAME NVARCHAR(50) COLLATE SQL_Latin1_General_CP1253_CI_AI) 

INSERT INTO DEGREE_VALUES VALUES(N'TEI');
INSERT INTO DEGREE_VALUES VALUES(N'AEI');
INSERT INTO DEGREE_VALUES VALUES(N'Master');
INSERT INTO DEGREE_VALUES VALUES(N'PHD');


CREATE TABLE CONTACT_AVAILABILITY_VALUES(NAME NVARCHAR(200) COLLATE SQL_Latin1_General_CP1253_CI_AI) 

INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(N'8-10 πμ, κάθε μέρα');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(N'10-12 Δευτέρα, Τετάρτη, Παρασκευή');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(N'9-12 κάθε μέρα πλην Τρίτης');

GO

CREATE FUNCTION IS_DEGREE_VALID (
    @input NVARCHAR(50)
)
RETURNS VARCHAR(5)
AS
BEGIN
    IF EXISTS (SELECT NAME FROM DEGREE_VALUES WHERE NAME = @input)
        return 'True'
    return 'False'
END 


CREATE FUNCTION IS_CONTACT_AVAILABILITY_VALID (
    @input NVARCHAR(200)
)
RETURNS VARCHAR(5)
AS
BEGIN
    IF EXISTS (SELECT NAME FROM CONTACT_AVAILABILITY_VALUES WHERE NAME = @input)
        return 'True'
    return 'False'
END 


CREATE TABLE CUSTOMERS(
	ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(320) NOT NULL CHECK(EMAIL LIKE '%_@__%.__%'),
	ADDRESS VARCHAR(100) NOT NULL,
	DEGREE VARCHAR(50) COLLATE SQL_Latin1_General_CP1253_CI_AI CHECK(dbo.IS_DEGREE_VALID(DEGREE)='True'),

	AGE INT NOT NULL CHECK(AGE>0 AND AGE<100) ,
	GENDER VARCHAR(20) NOT NULL CHECK(
		GENDER IN('MALE','FEMALE','OTHER')
	) ,

	GRADE DECIMAL(3,2) CHECK(GRADE>=0 AND GRADE<=10),
	
	CONTACT_AVAILABILITY VARCHAR(200) COLLATE SQL_Latin1_General_CP1253_CI_AI NOT NULL 
		CHECK(dbo.IS_CONTACT_AVAILABILITY_VALID(CONTACT_AVAILABILITY)='True')
	
)

SELECT * FROM CUSTOMERS


CREATE TABLE CONTACT_AVAILABILITY_MAPPING_VALUES(ID INT PRIMARY KEY , CONTACT_AVAILABILITY_VALUE_ID INT, DAY NVARCHAR(20), TIME_FROM INT, TIME_TO INT)

INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(1 , 1 , N'ΔΕΥΤΕΡΑ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(2 , 1 , N'ΤΡΙΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(3 , 1 , N'ΤΕΤΑΡΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(4 , 1 , N'ΠΕΜΠΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(5 , 1 , N'ΠΑΡΑΣΚΕΥΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(6 , 2 , N'ΔΕΥΤΕΡΑ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(7 , 2 , N'ΤΕΤΑΡΤΗ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(8 , 2 , N'ΠΑΡΑΣΚΕΥΗ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(9 , 3 , N'ΔΕΥΤΕΡΑ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(10 , 3 , N'ΤΕΤΑΡΤΗ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(11 , 3 , N'ΠΕΜΠΤΗ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES VALUES(12 , 3 , N'ΠΑΡΑΣΚΕΥΗ' , 9 ,12);

SELECT * FROM CONTACT_AVAILABILITY_MAPPING_VALUES
	WHERE TIME_FROM <= 11 AND TIME_TO >= 11 AND dbo.DAYS_TO_NUMBERS(DAY) >= dbo.DAYS_TO_NUMBERS(N'ΤΡΙΤΗ') 
	ORDER BY 
		CASE
			WHEN DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		TIME_FROM ASC ,
	    TIME_TO ASC

	
		


CREATE FUNCTION DAYS_TO_NUMBERS (
    @day NVARCHAR(20)
)
RETURNS INT
AS
BEGIN
	DECLARE @output AS INT
	SELECT @output =  CASE 
		WHEN @day = N'ΔΕΥΤΕΡΑ' THEN 1
		WHEN @day = N'ΤΡΙΤΗ' THEN   2
		WHEN @day = N'ΤΕΤΑΡΤΗ' THEN  3
		WHEN @day = N'ΠΕΜΠΤΗ' THEN  4
		WHEN @day = N'ΠΑΡΑΣΚΕΥΗ' THEN  5
	END	;
	RETURN  @output;
END 



CREATE TABLE CONTACT_AVAILABILITY_VALUES(ID INT PRIMARY KEY, NAME VARCHAR(200)  COLLATE SQL_Latin1_General_CP1253_CI_AI)

INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(1, N'8-10 πμ, κάθε μέρα');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(2, N'10-12 Δευτέρα, Τετάρτη, Παρασκευή');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(3, N'9-12 κάθε μέρα πλην Τρίτης');

CREATE TABLE CUSTOMERS(
	ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(320) NOT NULL CHECK(EMAIL LIKE '%_@__%.__%'),
	ADDRESS VARCHAR(100) NOT NULL,
	DEGREE VARCHAR(50) COLLATE SQL_Latin1_General_CP1253_CI_AI CHECK(dbo.IS_DEGREE_VALID(DEGREE)='True'),

	AGE INT NOT NULL CHECK(AGE>0 AND AGE<100) ,
	GENDER VARCHAR(20) NOT NULL CHECK(
		GENDER IN('MALE','FEMALE','OTHER')
	) ,

	GRADE DECIMAL(3,2) CHECK(GRADE>=0 AND GRADE<=10),
	
	CONTACT_AVAILABILITY VARCHAR(200) COLLATE SQL_Latin1_General_CP1253_CI_AI NOT NULL 
		CHECK(dbo.IS_CONTACT_AVAILABILITY_VALID(CONTACT_AVAILABILITY)='True')
	
)

INSERT INTO CUSTOMERS VALUES(
    1,
    'Thanasis',
    'Boutas',
    '6949660679',
    'thanasis@mail.com',
    'papaflessa 83',
    'MasTer',
    29,
    'MALE',
    7.77,
    N'10-12 Δευτέρα, Τετάρτη, Παρασκευή'
);


INSERT INTO CUSTOMERS VALUES(
    4,
    'thanasis',
    'Antetokoumpo',
    '693454545',
    'thanasis@mail.com',
    'papaflessa 50',
    'Master',
    29,
    'MALE',
    7.77,
    N'8-10 πμ, κάθε μέρα'
);


SELECT * FROM dbo.CONTACT_AVAILABILITY_VALUES

SELECT * FROM CUSTOMERS



--SELECT camv.* FROM CONTACT_AVAILABILITY_MAPPING_VALUES camv
--SELECT  c.ID , c.LAST_NAME , c.FIRST_NAME , camv.DAY , camv.TIME_FROM , camv.TIME_TO FROM CUSTOMERS c 
SELECT camv.day, c.ID, c.LAST_NAME , c.FIRST_NAME ,camv.TIME_FROM , camv.TIME_TO FROM CUSTOMERS c 
	JOIN CONTACT_AVAILABILITY_VALUES  cav
	ON c.CONTACT_AVAILABILITY = cav.NAME 
	JOIN CONTACT_AVAILABILITY_MAPPING_VALUES camv 
	ON cav.ID = camv.CONTACT_AVAILABILITY_VALUE_ID
	WHERE (camv.TIME_FROM <= 11 AND camv.TIME_TO >= 11  AND   dbo.DAYS_TO_NUMBERS(DAY) = dbo.DAYS_TO_NUMBERS(N'ΔΕΥΤΕΡΑ') ) 
		or 	dbo.DAYS_TO_NUMBERS(DAY) > dbo.DAYS_TO_NUMBERS(N'ΔΕΥΤΕΡΑ')
	ORDER BY 
		CASE
			WHEN camv.DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN camv.DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN camv.DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN camv.DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN camv.DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		camv.TIME_FROM ASC ,
	    camv.TIME_TO ASC ,
		c.ID ASC ,
		c.LAST_NAME ,
		c.FIRST_NAME

SELECT * FROM CONTACT_AVAILABILITY_MAPPING_VALUES

CREATE FUNCTION SORT_CUSTOMERS (
    @day NVARCHAR(50),
    @hour INT
)
RETURNS TABLE
AS RETURN(
	SELECT top(100000) camv.day, c.ID, c.LAST_NAME , c.FIRST_NAME ,camv.TIME_FROM , camv.TIME_TO FROM CUSTOMERS c 
	
	JOIN CONTACT_AVAILABILITY_VALUES  cav
	ON c.CONTACT_AVAILABILITY = cav.NAME 
	JOIN CONTACT_AVAILABILITY_MAPPING_VALUES camv 
	ON cav.ID = camv.CONTACT_AVAILABILITY_VALUE_ID
	WHERE (camv.TIME_FROM <= @hour AND camv.TIME_TO >= @hour  AND   dbo.DAYS_TO_NUMBERS(DAY) = dbo.DAYS_TO_NUMBERS(@day) ) 
		or 	dbo.DAYS_TO_NUMBERS(DAY) > dbo.DAYS_TO_NUMBERS(@day)
	ORDER BY 
		CASE
			WHEN camv.DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN camv.DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN camv.DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN camv.DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN camv.DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		camv.TIME_FROM ASC ,
	    camv.TIME_TO ASC ,
		c.ID ASC ,
		c.LAST_NAME ,
		c.FIRST_NAME)



CREATE FUNCTION foo1 (
)
RETURNS TABLE
AS RETURN(SELECT top(10000) camv.day, c.ID, c.LAST_NAME , c.FIRST_NAME ,camv.TIME_FROM , camv.TIME_TO FROM CUSTOMERS c 
	
	JOIN CONTACT_AVAILABILITY_VALUES  cav
	ON c.CONTACT_AVAILABILITY = cav.NAME 
	JOIN CONTACT_AVAILABILITY_MAPPING_VALUES camv 
	ON cav.ID = camv.CONTACT_AVAILABILITY_VALUE_ID
	WHERE (camv.TIME_FROM <= 11 AND camv.TIME_TO >= 11  AND   dbo.DAYS_TO_NUMBERS(DAY) = dbo.DAYS_TO_NUMBERS(N'ΔΕΥΤΕΡΑ') ) 
		or 	dbo.DAYS_TO_NUMBERS(DAY) > dbo.DAYS_TO_NUMBERS(N'ΔΕΥΤΕΡΑ')
	ORDER BY 
		CASE
			WHEN camv.DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN camv.DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN camv.DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN camv.DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN camv.DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		camv.TIME_FROM ASC ,
	    camv.TIME_TO ASC ,
		c.ID ASC ,
		c.LAST_NAME ,
		c.FIRST_NAME)

SELECT * FROM dbo.foo1();

SELECT * FROM dbo.SORT_CUSTOMERS(N'ΤΡΙΤΗ' , 11);

SELECT * FROM CONTACT_AVAILABILITY_VALUES

SELECT * FROM CONTACT_AVAILABILITY_MAPPING_VALUES

SELECT  dbo.DAYS_TO_NUMBERS('ΔΕΥΤΕΡΑ')












