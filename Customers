    @input NVARCHAR(50)
)
RETURNS VARCHAR(5)
AS
BEGIN
    IF EXISTS (SELECT NAME FROM DEGREE_VALUES WHERE NAME = @input)
        return 'True'
    return 'False'
END 


CREATE FUNCTION IS_CONTACT_AVAILABILITY_VALID (
    @input NVARCHAR(200)
)
RETURNS VARCHAR(5)
AS
BEGIN
    IF EXISTS (SELECT NAME FROM CONTACT_AVAILABILITY_VALUES WHERE NAME = @input)
        return 'True'
    return 'False'
END 



CREATE TABLE CUSTOMERS(
	ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(320) NOT NULL CHECK(EMAIL LIKE '%_@__%.__%'),
	ADDRESS VARCHAR(100) NOT NULL,
	DEGREE VARCHAR(50) COLLATE SQL_Latin1_General_CP1253_CI_AI CHECK(dbo.IS_DEGREE_VALID(DEGREE)='True'),

	AGE INT NOT NULL CHECK(AGE>0 AND AGE<100) ,
	GENDER VARCHAR(20) NOT NULL CHECK(
		GENDER IN('MALE','FEMALE','OTHER')
	) ,

	GRADE DECIMAL(3,2) CHECK(GRADE>=0 AND GRADE<=10),
	
	CONTACT_AVAILABILITY VARCHAR(200) COLLATE SQL_Latin1_General_CP1253_CI_AI NOT NULL 
		CHECK(dbo.IS_CONTACT_AVAILABILITY_VALID(CONTACT_AVAILABILITY)='True')
	
)




CREATE TABLE DEGREE_VALUES(NAME VARCHAR(50)) 

INSERT INTO DEGREE_VALUES VALUES('TEI');
INSERT INTO DEGREE_VALUES VALUES('AEI');
INSERT INTO DEGREE_VALUES VALUES('Master');
INSERT INTO DEGREE_VALUES VALUES('PHD');


CREATE TABLE CONTACT_AVAILABILITY_VALUES(ΙΝΤ ID PRIMARY KEY, NAME VARCHAR(200))

INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(1, '8-10 πμ, κάθε μέρα');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(2, '10-12 Δευτέρα, Τετάρτη, Παρασκευή');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(3, '9-12 κάθε μέρα πλην Τρίτης');

CREATE TABLE CUSTOMERS(
	ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	PHONE VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(320) NOT NULL CHECK(EMAIL LIKE '%_@__%.__%'),
	ADDRESS VARCHAR(100) NOT NULL,
	DEGREE VARCHAR(50) CHECK(DEGREE IN(SELECT NAME FROM DEGREE_VALUES)),

	AGE INT NOT NULL CHECK(AGE>0 AND AGE<100) ,
	GENDER VARCHAR(20) NOT NULL CHECK(
		GENDER IN('MALE','FEMALE','OTHER')
	) ,

	GRADE DECIMAL(3,2) CHECK(GRADE>=0 AND AGE<=10),
	
	CONTACT_AVAILABILITY VARCHAR(200) NOT NULL CHECK(
		CONTACT_AVAILABILITY IN (SELECT NAME FROM CONTACT_AVAILABILITY_VALUES)
	)
)



1 	8-10 πμ, κάθε μέρα
2 	10-12 Δευτέρα, Τετάρτη, Παρασκευή
3 	9-12 κάθε μέρα πλην Τρίτης
4 	8-10 πμ, κάθε μέρα



CREATE TABLE CONTACT_AVAILABILITY_VALUES(ID INT PRIMARY KEY, NAME VARCHAR(200))

INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(1,'8-10 πμ, κάθε μέρα');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(2,'10-12 Δευτέρα, Τετάρτη, Παρασκευή');
INSERT INTO CONTACT_AVAILABILITY_VALUES VALUES(3,'9-12 κάθε μέρα πλην Τρίτης');



CREATE TABLE CONTACT_AVAILABILITY_MAPPING_VALUES(ID INT PRIMARY_KEY , CONTACT_AVAILABILITY_VALUE_ID INT, DAY NVARCHAR(20), TIME_FROM INT, TIME_TO INT)

INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(1 , 1 , 'ΔΕΥΤΕΡΑ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(2 , 1 , 'ΤΡΙΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(3 , 1 , 'ΤΕΤΑΡΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(4 , 1 , 'ΠΕΜΠΤΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(5 , 1 , 'ΠΑΡΑΣΚΕΥΗ' , 8 ,10);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(6 , 2 , 'ΔΕΥΤΕΡΑ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(7 , 2 , 'ΤΕΤΑΡΤΗ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(8 , 2 , 'ΠΑΡΑΣΚΕΥΗ' , 10 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(9 , 3 , 'ΔΕΥΤΕΡΑ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(10 , 3 , 'ΤΕΤΑΡΤΗ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(11 , 3 , 'ΠΕΜΠΤΗ' , 9 ,12);
INSERT INTO CONTACT_AVAILABILITY_MAPPING_VALUES(12 , 3 , 'ΠΑΡΑΣΚΕΥΗ' , 9 ,12);



CREATE FUNCTION SORT_CUSTOMERS (
    @day NVARCHAR(50)
    @hour INT
)
RETURNS VARCHAR(5)
AS
BEGIN
	SELECT camv.day, c.ID, c.LAST_NAME , c.FIRST_NAME ,camv.TIME_FROM , camv.TIME_TO FROM CUSTOMERS c 
	
	JOIN CONTACT_AVAILABILITY_VALUES  cav
	ON c.CONTACT_AVAILABILITY = cav.NAME 
	JOIN CONTACT_AVAILABILITY_MAPPING_VALUES camv 
	ON cav.ID = camv.CONTACT_AVAILABILITY_VALUE_ID
	WHERE (camv.TIME_FROM <= @hour AND camv.TIME_TO >= @hour  AND   dbo.DAYS_TO_NUMBERS(DAY) = dbo.DAYS_TO_NUMBERS(@day) ) 
		or 	dbo.DAYS_TO_NUMBERS(DAY) > dbo.DAYS_TO_NUMBERS(N'ΔΕΥΤΕΡΑ')
	ORDER BY 
		CASE
			WHEN camv.DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN camv.DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN camv.DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN camv.DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN camv.DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		camv.TIME_FROM ASC ,
	    camv.TIME_TO ASC ,
		c.ID ASC ,
		c.LAST_NAME ,
		c.FIRST_NAME
END 




SELECT * FROM CONTACT_AVAILABILITY_MAPPING_VALUES
	WHERE TIME_FROM <= 11 AND TIME_TO >= 11  
	ORDER BY 
		CASE
			WHEN DAY = N'ΔΕΥΤΕΡΑ' THEN 1
			WHEN DAY = N'ΤΡΙΤΗ' THEN 2
			WHEN DAY = N'ΤΕΤΑΡΤΗ' THEN 3
			WHEN DAY = N'ΠΕΜΠΤΗ' THEN 4
			WHEN DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN 5
		END ASC,
		TIME_FROM ASC ,
	    TIME_TO ASC

	
		


CREATE FUNCTION DAYS_TO_NUMBERS (
    @day NVARCHAR(20)
)
RETURNS INT
AS
BEGIN
	CASE
		WHEN DAY = N'ΔΕΥΤΕΡΑ' THEN RETURN 1
		WHEN DAY = N'ΤΡΙΤΗ' THEN  RETURN 2
		WHEN DAY = N'ΤΕΤΑΡΤΗ' THEN RETURN 3
		WHEN DAY = N'ΠΕΜΠΤΗ' THEN RETURN 4
		WHEN DAY = N'ΠΑΡΑΣΚΕΥΗ' THEN RETURN 5
	END	
END 


CREATE FUNCTION IS_DEGREE_VALID (
    @input NVARCHAR(50)
)
RETURNS VARCHAR(5)
AS
BEGIN
    IF EXISTS (SELECT NAME FROM DEGREE_VALUES WHERE NAME = @input)
        return 'True'
    return 'False'
END 































